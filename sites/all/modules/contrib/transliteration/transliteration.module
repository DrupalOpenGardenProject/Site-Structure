<?php
// $Id: transliteration.module,v 1.2.4.2 2009/06/07 19:05:50 smk Exp $

/**
 * @file
 * Provides transliteration for UTF-8 text input and sanitzes file names.
 *
 * Uses data from the Text::Unidecode Perl library.
 * @see http://search.cpan.org/~sburke/Text-Unidecode-0.04/lib/Text/Unidecode.pm
 */

/**
 * Transliterate UTF-8 input to plain ASCII.
 *
 * This function loads the required include file and returns the result of the
 * main function, transliteration_process().
 *
 * @param string $input
 *   UTF-8 text input.
 * @param string $unknown
 *   Replacement for unknown characters and illegal UTF-8 sequences.
 * @param string $langcode
 *   Optional ISO 639 language code used to import language specific
 *   replacements. See data/x00.php for an example. Defaults to the
 *   current display language.
 *
 * @return string
 *   Plain ASCII output.
 * @see transliteration_process()
 */
function transliteration_get($input, $unknown = '?', $langcode = NULL) {
  require_once (drupal_get_path('module', 'transliteration') . '/transliteration.inc');
  return transliteration_process($input, $unknown, $langcode);
}

/**
 * Implementation of hook_init().
 *
 * Transliterate and clean the names of files currently being uploaded.
 */
function transliteration_init() {
  if (!empty($_FILES['files'])) {
    require_once (drupal_get_path('module', 'transliteration') . '/transliteration.inc');

    $langcode = NULL;
    if (!empty($_POST['language'])) {
      $languages = language_list();
      $langcode = isset($languages[$_POST['language']]) ? $_POST['language'] : NULL;
    }
    foreach ($_FILES['files']['name'] as $field => $filename) {
      $_FILES['files']['name'][$field] = transliteration_clean_filename($filename, $langcode);
    }
  }
}

